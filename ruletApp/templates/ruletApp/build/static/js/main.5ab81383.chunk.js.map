{"version":3,"sources":["components/layouts/Header.js","components/layouts/Footer.js","components/layouts/NotificationSystem.js","components/layouts/HeaderFooterWrapper.js","components/pages/DepartmentSelect.js","components/pages/DepartmentProfilePage.js","components/pages/EmployeeList.js","components/pages/EmployeeDetail.js","components/pages/RuletList.js","components/pages/RuletSessionResult.js","components/pages/Rulet.js","Router.js","App.js","serviceWorker.js","index.js"],"names":["CLEAR_ALL_DEPARTMENTS_MUTATION","gql","Header","props","state","redirect","link","handleEmployeesLink","bind","handleHomeLink","handleRuletsLink","e","window","location","pathname","this","setState","to","brand","department","alignLinks","className","style","color","type","checked","onClick","host","mutation","handleMutation","data","Component","Footer","backgroundColor","NOT_PAPRTICIPATE_MUTATION","NotificationSystem","socket","requestModal","participatingModal","request","participating","department_id","cookies","Cookies","get","WebSocket","DEVELOP","url","not_participate_mutate","header","actions","waves","modal","flat","ev","handleAgreeAndParticipate","variables","id","handleBackToSession","onmessage","elem","document","querySelector","M","Modal","init","JSON","parse","message_inner","innerHTML","not_participate","ReactDOM","render","client","open","close","HeaderFooterWrapper","Department","set","DepartmentId","result","children","avoidNotification","push","GET_DEPARTMENTS_QUERY","DepartmentSelectChild","onChange","useQuery","loading","error","message","label","departments","map","value","name","select","getElementById","options","selectedIndex","right","DepartmentSelect","handleChange","GET_DEPARTMENT_DATA_QUERY","CLEAR_DEPARTMENT_MUTATION","DepartmentProfilePageChild","departmentId","onClear","isEmpty","refetch","collapsible_items","address","icon","description","length","empty_department","href","employees","src","image","alt","width","height","firstName","lastName","DepartmentProfilePage","empty","handleClear","forceUpdate","match","params","GET_EMPLOYEES_QUERY","PrintDepartment","EmployeeListChild","collection_items","EmployeeList","employee_id","GET_EMPLOYEE_DETAIL_QUERY","EmployeeDetail","list_of_actions","employee","dateOfBirth","m","s","textClassName","title","GET_RULET_SESSIONS","RuletListChild","ruletSessions","r","date","RuletList","rulet_id","GET_RULET_SESSION_INFORMATION","RuletSessionResultChild","ruletId","rulet_session_id","rows","ruletChoices","ruletSession","i","includes","reverse","break_cycle","is_empty","pop","align","is_active_label","active","RuletSessionResult","GET_EMPLOYEES_WITHOUT_DEPARTMETNS","RuletEmployeesRequest","Rulet","socket_is_open","modal_message","employees_data","employees_ready","onopen","console","log","new_data","employeesWithoutDepartment","Carousel","send","stringify","handleProfilePageRedirect","handleChose","floating","large","handleExit","Router","exact","path","component","App","Boolean","hostname","ApolloClient","createHttpLink","uri","origin","cache","InMemoryCache","fetchOptions","mode","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.5ab81383.chunk.js","sourcesContent":["import React, {Component} from \"react\"\nimport {Navbar, NavItem, Switch} from \"react-materialize\";\nimport {Redirect} from \"react-router-dom\";\nimport {Mutation} from \"react-apollo\";\nimport gql from \"graphql-tag\";\n\nconst CLEAR_ALL_DEPARTMENTS_MUTATION = gql`\n    mutation {\n        clearAllDepartment {\n            departments{\n                id\n            }\n        }\n    }\n`;\n\nclass Header extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            redirect: false,\n            link: null\n        };\n        this.handleEmployeesLink = this.handleEmployeesLink.bind(this);\n        this.handleHomeLink = this.handleHomeLink.bind(this);\n        this.handleRuletsLink = this.handleRuletsLink.bind(this);\n    }\n\n    handleEmployeesLink(e) {\n        if (window.location.pathname !== \"/employees_list/\")\n            this.setState({redirect: true, link: \"/employees_list/\"});\n    }\n\n    handleHomeLink(e) {\n        if (window.location.pathname !== \"/\")\n            this.setState({redirect: true, link: \"/\"})\n    }\n\n    handleRuletsLink(e) {\n        if (window.location.pathname !== \"/rulet/list/\")\n            this.setState({redirect: true, link: \"/rulet/list/\"});\n    }\n\n    render() {\n\n        if (this.state.redirect)\n            return <Redirect to={this.state.link}/>;\n\n        return <Navbar brand={<a>The Rulet Application {this.props.department}</a>} alignLinks=\"right\">\n            <NavItem>\n                <div className=\"switch\"><label style={{color: \"white\"}}>\n                    template<input type=\"checkbox\" checked={true}\n                                   onClick={() => window.location.host = '127.0.0.1:8000'}/>\n                    <span className=\"lever\"></span>react</label></div>\n            </NavItem>\n            <NavItem onClick={this.handleEmployeesLink}>\n                Employees list\n            </NavItem>\n            <NavItem onClick={this.handleRuletsLink}>\n                Rulet list\n            </NavItem>\n            <Mutation mutation={CLEAR_ALL_DEPARTMENTS_MUTATION}>\n                { (handleMutation, {data}) => <NavItem onClick={() => handleMutation()}>\n                    Clear all departments\n                </NavItem>}\n            </Mutation>\n            <NavItem onClick={this.handleHomeLink}>\n                Home\n            </NavItem>\n        </Navbar>\n    }\n}\n\nexport default Header;\n","import React from \"react\"\n\nfunction Footer() {\n    return <footer className=\"page-footer\" style={{backgroundColor: \"#0066ff\"}}>\n        <div className=\"container\">\n            <div className=\"row\">\n                <div className=\"col l6 s12\">\n                    <h5 className=\"white-text\">Information</h5>\n                    <p className=\"grey-text text-lighten-4\">You can use this application to distribute your workers\n                        between departments</p>\n                </div>\n            </div>\n        </div>\n        <div className=\"footer-copyright\" color={\"#0066ff\"}>\n            <div className=\"container\">\n                The Rulet Application 2019\n            </div>\n        </div>\n    </footer>\n}\n\nexport default Footer;","import React, {Component} from \"react\";\nimport Cookies from \"universal-cookie\";\nimport {Modal, Button} from \"react-materialize\"\nimport M from \"materialize-css\"\nimport {Redirect} from \"react-router-dom\";\nimport gql from \"graphql-tag\";\nimport {Mutation} from \"react-apollo\";\nimport ReactDOM from \"react-dom\"\nimport {ApolloProvider} from \"react-apollo\";\nimport client from \"../../index\";\nimport {DEVELOP} from \"../../index\";\n\nconst NOT_PAPRTICIPATE_MUTATION = gql`\n    mutation ($id: ID!){\n        departmentNotParticipate(id: $id) {\n            department{\n                ruletState\n            }\n        }\n    }\n`;\n\n\nclass NotificationSystem extends Component {\n\n    socket = null;\n\n    requestModal = null;\n    participatingModal = null;\n\n    request = null;\n    participating = null;\n\n    department_id = null;\n\n    constructor(props) {\n        super(props);\n        let cookies = new Cookies();\n        this.department_id = cookies.get(\"department\");\n        this.socket = new WebSocket(\n            (DEVELOP ? \"ws://127.0.0.1:8000\" : \"ws://\" + window.location.host)\n                    + \"/ws/notification/\" + cookies.get(\"department\")\n        );\n\n        this.state = {\n            redirect: false,\n            url: null,\n            not_participate_mutate: false\n        };\n\n        this.requestModal = <Modal header={\"You are requested to participate in the rulet\"}\n                                   actions={[\n                <Button waves=\"green\" modal=\"close\" flat onClick={ev =>\n                    this.handleAgreeAndParticipate(cookies.get(\"department\"))}>Agree and participate</Button>,\n                <Mutation mutation={NOT_PAPRTICIPATE_MUTATION}>\n                    {   (handleMutation, {data}) =>\n                        <Button waves=\"green\" modal=\"close\" flat onClick={ev => handleMutation(\n                            {variables: {id: +this.department_id}})}>Agree and do not participate</Button>\n                    }\n                </Mutation>,\n                <Button waves=\"green\" modal=\"close\" flat>Disagree, you can agree later</Button>\n            ]} id={\"request\"}>\n            <p>\n                You can participate. In that case you will be redirected to the rulet page. <br/>\n                Also you can allow rulet and do not participate on it.\n            </p>\n        </Modal>;\n\n        this.participatingModal = <Modal header={\"You are participating in the rulet\"}\n                                         actions={[\n                    <Button waves=\"green\" modal=\"close\" flat>Ok</Button>,\n                    <Button waves=\"green\" modal=\"close\" flat onClick={ev =>\n                        this.handleBackToSession(cookies.get(\"department\"))}>Back to session</Button>\n                ]} id={\"participating\"}>\n             <p>\n                 You can go to the rulet session or do it later\n             </p>\n        </Modal>;\n\n        this.socket.onmessage = ev => {\n\n            if (this.request === null) {\n                let elem = document.querySelector('#request');\n                this.request = M.Modal.init(elem);\n            }\n            if (this.participating === null) {\n                let elem = document.querySelector(\"#participating\");\n                this.participating = M.Modal.init(elem);\n            }\n\n            let data = JSON.parse(ev.data);\n            if(data.state === 'notification') {\n                let message_inner = document.querySelector(\"#message\");\n                if (message_inner)\n                    message_inner.innerHTML = \"You need to allow or/and join to the rulet.\";\n\n                let not_participate = document.querySelector(\"#not_participate\");\n                if (not_participate)\n                    ReactDOM.render(<ApolloProvider client={client}><Mutation mutation={NOT_PAPRTICIPATE_MUTATION}>\n                        {\n                            (handleMutation, {data}) =>\n                            <Button waves={\"light\"} onClick={() => {\n                                handleMutation({variables: {id: +this.department_id}});\n                                not_participate.innerHTML = \"\";\n                                if (message_inner)\n                                    message_inner.innerHTML =\n                                        \"You are not participating in the rulet, but you still can.\";\n                            }}>\n                                Do not participate in the rulet</Button>\n                        }\n                    </Mutation></ApolloProvider>, not_participate);\n\n                this.request.open();\n            }\n            else if (data['state'] === 'participating') {\n                let message_inner = document.querySelector(\"#message\");\n                if (message_inner)\n                    message_inner.innerHTML = \"You are participating in the rulet.\";\n\n                let not_participate = document.querySelector(\"#not_participate\");\n                if (not_participate)\n                    not_participate.innerHTML = \"\";\n\n                this.participating.open();\n            }\n            else {\n                let message_inner = document.querySelector(\"#message\");\n                if (message_inner)\n                    message_inner.innerHTML = \"You can begin the rulet session.\";\n\n                let not_participate = document.querySelector(\"#not_participate\");\n                if (not_participate)\n                    not_participate.innerHTML = \"\";\n            }\n        };\n    }\n\n    handleAgreeAndParticipate(department_id) {\n        this.handleBackToSession(department_id);\n    }\n\n    handleBackToSession(department_id) {\n        this.setState({redirect: true, url: \"/rulet/\" + department_id})\n    }\n\n    render() {\n\n        if (this.state.redirect)\n            return <Redirect to={this.state.url}/>;\n\n        return [\n            this.requestModal,\n            this.participatingModal\n        ]\n    }\n\n    componentWillUnmount() {\n        this.socket.close();\n    }\n}\n\nexport default NotificationSystem;","import React from \"react\"\nimport Header from \"./Header\";\nimport Footer from \"./Footer\";\nimport Cookies from \"universal-cookie\"\nimport NotificationSystem from \"./NotificationSystem\";\n\n\nfunction HeaderFooterWrapper(props) {\n\n    const cookies = new Cookies();\n    if (props.Department)\n        cookies.set(\"department_name\", props.Department);\n    if (props.DepartmentId)\n        cookies.set(\"department\", props.DepartmentId);\n\n    let result = [\n        <Header department={cookies.get(\"department_name\")}/>,\n        <main>{props.children}</main>,\n        <Footer/>,\n    ];\n\n    if (!props.avoidNotification)\n        result.push(<NotificationSystem/>);\n\n    return result;\n}\n\nexport default HeaderFooterWrapper;","import gql from 'graphql-tag'\nimport React, { Component } from \"react\";\nimport {Select, Button, Icon} from \"react-materialize\"\nimport {useQuery} from \"@apollo/react-hooks\";\nimport HeaderFooterWrapper from \"../layouts/HeaderFooterWrapper\";\nimport {Redirect} from \"react-router-dom\"\nimport M from \"materialize-css\"\n\nconst GET_DEPARTMENTS_QUERY = gql`\n    query getRuletSessions{\n        departments{\n            id\n            name\n        }\n    }\n`;\n\nfunction DepartmentSelectChild({ onChange }) {\n\n    // M.AutoInit();\n    const { loading, error, data } = useQuery(GET_DEPARTMENTS_QUERY);\n    if (loading)\n        return <HeaderFooterWrapper>Loading...</HeaderFooterWrapper>;\n    if (error)\n        return <HeaderFooterWrapper>Error: {error.message}</HeaderFooterWrapper>;\n    return <HeaderFooterWrapper>\n        <div className={\"section container\"}>\n            <Select label={\"chose department\"} id={\"selected\"}>\n                {data.departments.map(department => <option value={department.id}>{department.name}</option>)}\n            </Select>\n            <Button type=\"submit\" waves=\"light\" onClick={() => {\n                let select = document.getElementById(\"selected\");\n                onChange(select.options[select.selectedIndex].value);\n            }}>\n                Submit\n                <Icon right>\n                    send\n                </Icon>\n            </Button>\n        </div>\n    </HeaderFooterWrapper>\n}\n\nclass DepartmentSelect extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            redirect: false,\n            department_id: 0\n        };\n        this.handleChange = this.handleChange.bind(this);\n    }\n    handleChange(department_id) {\n        this.setState({\n            redirect: true,\n            department_id: department_id\n        });\n    }\n    render() {\n        if (this.state.redirect)\n            return <Redirect to={\"/department/\" + this.state.department_id}/>;\n        return <DepartmentSelectChild onChange={this.handleChange}/>\n    }\n}\n\nexport default DepartmentSelect;","import React, {Component} from \"react\"\nimport gql from 'graphql-tag'\nimport {useQuery} from \"@apollo/react-hooks\";\nimport {Collapsible, CollapsibleItem, Icon, Collection, CollectionItem, Button} from \"react-materialize\";\nimport HeaderFooterWrapper from \"../layouts/HeaderFooterWrapper\";\nimport {Redirect} from \"react-router-dom\";\nimport {Mutation} from \"react-apollo\";\nimport {DEVELOP} from \"../../index\";\n\n\nconst GET_DEPARTMENT_DATA_QUERY = gql`\n    query ($department_id: Int!){\n        department(id: $department_id){\n            id\n            name\n            description\n            address\n            employees {\n                id\n                firstName\n                lastName\n                image\n            }\n        }\n    }\n`;\n\nconst CLEAR_DEPARTMENT_MUTATION = gql`\n    mutation ($id: Int!){\n        clearDepartment(id: $id){\n            department{\n                id\n            }\n        }\n    }\n`;\n\nfunction DepartmentProfilePageChild({onChange, departmentId, onClear, isEmpty}) {\n\n    const { loading, error, data, refetch } = useQuery(GET_DEPARTMENT_DATA_QUERY, {\n            variables: { department_id: departmentId },\n        });\n\n    if (loading)\n        return <HeaderFooterWrapper>Loading ...</HeaderFooterWrapper>;\n    if (error)\n        return <HeaderFooterWrapper>Error: {error.message}</HeaderFooterWrapper>;\n    let collapsible_items = [];\n    if (data.department.address)\n        collapsible_items.push(\n            <CollapsibleItem header={\"Address\"} icon={<Icon>place</Icon>}>\n                {data.department.address}\n            </CollapsibleItem>\n        );\n    if (data.department.description.length > 0)\n        collapsible_items.push(\n            <CollapsibleItem header={\"Description\"} icon={<Icon>description</Icon>}>\n              {data.department.description}\n          </CollapsibleItem>\n        );\n    let empty_department =\n        <CollapsibleItem header={\"Employees\"} icon={<Icon>face</Icon>}>\n            <Collection>\n                <CollectionItem href={\"#\"} onClick={() => {}}>\n                    There is no employees in this department.\n                </CollectionItem>\n            </Collection>\n        </CollapsibleItem>;\n    if (data.department.employees.length > 0)\n        collapsible_items.push(\n            <CollapsibleItem header={\"Employees\"} icon={<Icon>face</Icon>}>\n                <Collection>\n                    {data.department.employees.map(e =>\n                    <CollectionItem href={\"#\"} onClick={() => onChange(\"/employee/\" + e.id)}>\n                        <img src={(DEVELOP ? \"http://127.0.0.1:8000\" : \"\") + e.image} alt={\"\"}\n                             className={\"circle\"} width={\"4%\"} height={\"4%\"}/>\n                        {e.firstName} {e.lastName}\n                    </CollectionItem>\n                    )}\n                </Collection>\n            </CollapsibleItem>\n        );\n    else\n        collapsible_items.push(empty_department);\n\n    return <HeaderFooterWrapper Department={data.department.name} DepartmentId={data.department.id}>\n        <div className={\"container\"}>\n            <h1>{data.department.name}</h1>\n            <Collapsible>\n                {isEmpty ? empty_department : collapsible_items}\n            </Collapsible>\n            <p id={\"message\"}>You can begin the rulet session.</p>\n            <Mutation mutation={CLEAR_DEPARTMENT_MUTATION}>\n                {(handleMutation, {data}) => <Button waves={\"light\"} onClick={() => {\n                    handleMutation({variables: {id: departmentId}});\n                    onClear();\n                }}>\n                    clear department\n                </Button>}\n            </Mutation> <span></span>\n            <Button waves={\"light\"} onClick={() => onChange(\"/rulet/\" + departmentId)}>Participate in the rulet</Button>\n            <span> </span>\n            <a id={\"not_participate\"}></a>\n            <p></p><br/>\n        </div>\n    </HeaderFooterWrapper>;\n\n}\n\nclass DepartmentProfilePage extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            redirect: false,\n            url: null,\n            empty: false\n        };\n        this.handleChange = this.handleChange.bind(this);\n        this.handleClear = this.handleClear.bind(this);\n    }\n\n    handleChange(url) {\n        this.setState({\n            redirect: true,\n            url: url\n        });\n        this.forceUpdate()\n    }\n\n    handleClear() {\n        this.setState({empty: true})\n    }\n\n    render() {\n        if (this.state.redirect)\n        {\n            this.state.redirect = false;\n            return <Redirect to={this.state.url}/>;\n        }\n\n        return <DepartmentProfilePageChild onChange={this.handleChange}\n                                           departmentId={this.props.match.params.department_id}\n                                           isEmpty={this.state.empty}\n                                           onClear={this.handleClear}/>\n    }\n}\n\nexport default DepartmentProfilePage;","import React, {Component} from \"react\";\nimport {Collection, CollectionItem} from \"react-materialize\"\nimport HeaderFooterWrapper from \"../layouts/HeaderFooterWrapper\";\nimport gql from \"graphql-tag\";\nimport {useQuery} from \"@apollo/react-hooks\";\nimport {Redirect} from \"react-router-dom\";\nimport {DEVELOP} from \"../../index\";\n\nconst GET_EMPLOYEES_QUERY = gql`\n    query {\n        employees {\n            id\n            firstName\n            lastName\n            image\n            department {\n                name\n            }\n        }\n    }\n\n`;\n\n\nfunction PrintDepartment({department}) {\n    if (department)\n        return \". Is in the \" + department.name;\n    else\n        return \"\";\n}\n\nfunction EmployeeListChild({ onChange }) {\n\n    let { loading, error, data } = useQuery(GET_EMPLOYEES_QUERY);\n    if (loading)\n        return <HeaderFooterWrapper>Loading ... </HeaderFooterWrapper>;\n    if (error)\n        return <HeaderFooterWrapper> Error: {error.message}</HeaderFooterWrapper>;\n\n    let collection_items = <CollectionItem href={\"#\"} onClick={() => onChange(-1)}>\n        there is no employees yet. Go home.\n    </CollectionItem>;\n    if (data.employees.length > 0)\n        collection_items = data.employees.map(e =>  <CollectionItem href={\"#\"}  onClick={() => onChange(e.id)} >\n            <img src={(DEVELOP ? \"http://127.0.0.1:8000\" : \"\") + e.image} alt={\"\"}\n                 className={\"circle\"} width={\"4%\"} height={\"4%\"}/> {e.firstName} {e.lastName}\n                 <PrintDepartment department={e.department}/>\n        </CollectionItem>);\n\n    return <HeaderFooterWrapper>\n        <div className={\"section\"}>\n            <Collection>\n                {collection_items}\n            </Collection>\n        </div>\n    </HeaderFooterWrapper>\n}\n\nclass EmployeeList extends Component{\n    constructor(props) {\n        super(props);\n        this.state = {\n            redirect: false,\n            employee_id: 0\n        };\n        this.handleChange = this.handleChange.bind(this);\n    }\n\n    handleChange(employee_id) {\n        this.setState({\n            redirect: true,\n            employee_id: employee_id\n        });\n    }\n    render() {\n        if (this.state.redirect) {\n            if (this.state.employee_id < 0)\n                return <Redirect to={\"/\"}/>;\n            return <Redirect to={\"/employee/\" + this.state.employee_id}/>;\n        }\n        return <EmployeeListChild onChange={this.handleChange}/>\n    }\n}\n\n\nexport default EmployeeList;","import React from \"react\"\nimport HeaderFooterWrapper from \"../layouts/HeaderFooterWrapper\";\nimport {Card, Row, Col} from \"react-materialize\"\nimport {useQuery} from \"@apollo/react-hooks\";\nimport gql from \"graphql-tag\";\nimport {DEVELOP} from \"../../index\";\n\n\nconst GET_EMPLOYEE_DETAIL_QUERY = gql`\n    query ($employee_id: Int!){\n        employee(id: $employee_id) {\n            firstName\n            lastName\n            description\n            dateOfBirth\n            image\n            department {\n                name\n            }\n\n        }\n    }\n`;\n\nfunction EmployeeDetail(props) {\n    let employee_id =  props.match.params.employee_id;\n    let { error, loading, data } = useQuery(GET_EMPLOYEE_DETAIL_QUERY, {\n        variables: { employee_id }\n    });\n\n    if (loading)\n        return <HeaderFooterWrapper>\n            Loading...\n        </HeaderFooterWrapper>;\n    if (error)\n        return <HeaderFooterWrapper>\n            ERROR: {error.message}\n        </HeaderFooterWrapper>;\n\n    let list_of_actions = [];\n    if (data.employee.department)\n        list_of_actions.push(<a>\n            IS IN THE <b>{data.employee.department.name}</b>\n        </a>);\n    else\n        list_of_actions.push(<a>\n            <b>IS NOT IN ANY DEPARTMENT</b>\n        </a>);\n\n    list_of_actions.push(<a>\n        WAS BORN IN {data.employee.dateOfBirth}\n    </a>);\n\n    return <HeaderFooterWrapper>\n        <Row>\n            <Col m={6} s={12}>\n                <Card\n                    className=\"blue-grey darken-1\"\n                    textClassName=\"white-text\"\n                    title={<span>\n                        <img src={(DEVELOP ? \"http://127.0.0.1:8000\" : \"\") + data.employee.image}\n                             width={\"30%\"} height={\"30%\"} className={\"circle\"} alt={\"\"}/>\n                        {data.employee.firstName} {data.employee.lastName}\n                    </span>}\n                    actions={list_of_actions}\n                >\n\n                    {data.employee.description}\n                </Card>\n            </Col>\n        </Row>\n    </HeaderFooterWrapper>\n}\n\nexport default EmployeeDetail;","import React, {Component} from \"react\"\nimport HeaderFooterWrapper from \"../layouts/HeaderFooterWrapper\";\nimport {useQuery} from \"@apollo/react-hooks\";\nimport gql from \"graphql-tag\";\nimport {Collection, CollectionItem} from \"react-materialize\";\nimport {Redirect} from \"react-router-dom\";\n\nconst GET_RULET_SESSIONS = gql`\n    query {\n        ruletSessions {\n            id\n            date\n        }\n    }\n`;\n\nfunction RuletListChild({onChange}) {\n    let { loading, error, data } = useQuery(GET_RULET_SESSIONS);\n    if (loading)\n        return <HeaderFooterWrapper>\n            Loading ...\n        </HeaderFooterWrapper>;\n    if (error)\n        return <HeaderFooterWrapper>\n            Error: {error.message}\n        </HeaderFooterWrapper>;\n\n    let collection_items = <CollectionItem href={\"#\"} onClick={() => onChange(-1)}>\n        There were no rulet sessions yet. Go home page.\n    </CollectionItem>;\n\n    if (data.ruletSessions.length > 0)\n        collection_items = data.ruletSessions.map(r => <CollectionItem href={\"#\"} onClick={() => onChange(r.id)}>\n            rulet session on {r.date}\n        </CollectionItem>);\n\n    return <HeaderFooterWrapper>\n        <div className={\"section\"}>\n            <Collection>\n                {collection_items}\n            </Collection>\n        </div>\n    </HeaderFooterWrapper>\n}\n\nclass RuletList extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            redirect: false,\n            rulet_id: 0\n        };\n        this.handleChange = this.handleChange.bind(this);\n    }\n    handleChange(rulet_id) {\n        this.setState({\n            redirect: true,\n            rulet_id: rulet_id\n        });\n    }\n\n    render() {\n        if (this.state.redirect)\n        {\n            if (this.state.rulet_id < 0)\n                return <Redirect to={\"/\"}/>;\n            return <Redirect to={\"/rulet/list/\" + this.state.rulet_id}/>;\n        }\n        return <RuletListChild onChange={this.handleChange}/>\n    }\n}\n\nexport default RuletList;","import React, {Component} from \"react\"\nimport HeaderFooterWrapper from \"../layouts/HeaderFooterWrapper\";\nimport {Redirect} from \"react-router-dom\";\nimport gql from \"graphql-tag\";\nimport {useQuery} from \"@apollo/react-hooks\";\nimport {DEVELOP} from \"../../index\";\n\nconst GET_RULET_SESSION_INFORMATION = gql`\n    query ($rulet_session_id: Int!){\n        ruletSession(id: $rulet_session_id) {\n            active\n            ruletChoices {\n                employee {\n                    id\n                    firstName\n                    lastName\n                    image\n                }\n                department {\n                    name\n                }\n            }\n        }\n    }\n`;\n\nfunction RuletSessionResultChild({onChange, ruletId}) {\n    let { loading, error, data } = useQuery(GET_RULET_SESSION_INFORMATION, {\n        variables: {rulet_session_id: ruletId}\n    });\n    if (loading)\n        return <HeaderFooterWrapper>\n            Loading ...\n        </HeaderFooterWrapper>;\n\n    if (error)\n       return  <HeaderFooterWrapper>\n           Error: {error.message}\n       </HeaderFooterWrapper>;\n\n    let rows = [];\n    let departments = [];\n    let employees = [];\n    let ruletChoices = data.ruletSession.ruletChoices;\n    for (let i = 0; i < ruletChoices.length; i++)\n    {\n        if (!departments.includes(ruletChoices[i].department.name))\n        {\n            if (rows.length === 0)\n                rows.push([]);\n            rows[0].push(<th>{ruletChoices[i].department.name}</th>);\n            departments.push(ruletChoices[i].department.name);\n            employees[ruletChoices[i].department.name] = [];\n        }\n        employees[ruletChoices[i].department.name].push(ruletChoices[i].employee);\n    }\n\n    for (let i = 0; i < departments.length; i++)\n        employees[departments[i]].reverse();\n\n    let break_cycle = true;\n    while (break_cycle)\n    {\n        let is_empty = true;\n        rows.push([]);\n        for (let i = 0; i < departments.length; i++)\n        {\n            if (employees[departments[i]].length !== 0 && is_empty)\n                is_empty = false;\n\n            if (employees[departments[i]].length === 0)\n                rows[rows.length - 1].push(<td> </td>);\n            else\n            {\n                let employee = employees[departments[i]].pop();\n\n                rows[rows.length - 1].push(<td align={\"center\"}>\n                    <a onClick={() => onChange(employee.id)} href={\"#\"}>\n                        <img src={(DEVELOP ? \"http://127.0.0.1:8000\" : \"\") + employee.image} alt={\"\"}\n                        className={\"circle\"} height={\"4%\"}/>{\" \"}\n                        {employee.firstName} {employee.lastName}\n                    </a>\n                </td>)\n            }\n        }\n        if (is_empty)\n        {\n            break_cycle = false;\n            rows.pop();\n        }\n        else\n            is_empty = true;\n\n    }\n\n    let is_active_label = \"\";\n    if (data.ruletSession.active)\n        is_active_label = <h1>This rulet in session. Results are for now.</h1>;\n\n    return <HeaderFooterWrapper>\n        <div className={\"container section\"}>\n            {is_active_label}\n            <table className={\"striped\"}>\n                {rows.map(r => <tr>{r}</tr>)}\n            </table>\n        </div>\n    </HeaderFooterWrapper>\n}\n\nclass RuletSessionResult extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            redirect: false,\n            employee_id: 0\n        };\n        this.handleChange = this.handleChange.bind(this);\n    }\n\n    handleChange(employee_id) {\n        this.setState({\n            redirect: true,\n            employee_id: employee_id\n        });\n    }\n\n    render() {\n        if (this.state.redirect)\n            return <Redirect to={\"/employee/\" + this.state.employee_id}/>;\n        return <RuletSessionResultChild onChange={this.handleChange} ruletId={this.props.match.params.rulet_id}/>;\n    }\n}\n\nexport default RuletSessionResult;","import React, {Component} from \"react\";\nimport {Carousel, Modal, Button, Icon} from \"react-materialize\"\nimport HeaderFooterWrapper from \"../layouts/HeaderFooterWrapper\";\nimport {useQuery} from \"@apollo/react-hooks\";\nimport gql from \"graphql-tag\";\nimport {Redirect} from \"react-router-dom\";\nimport M from \"materialize-css\"\nimport {DEVELOP} from \"../../index\";\n\n\nconst GET_EMPLOYEES_WITHOUT_DEPARTMETNS = gql`\n    query {\n        employeesWithoutDepartment {\n            id\n            lastName\n            firstName\n            dateOfBirth\n            description\n            image\n        }\n    }\n`;\n\nfunction RuletEmployeesRequest({onChange}) {\n\n    let {error, loading, data} = useQuery(GET_EMPLOYEES_WITHOUT_DEPARTMETNS);\n\n    if (loading) return <HeaderFooterWrapper avoidNotification={true}>Loading ... </HeaderFooterWrapper>;\n    if (error) return <HeaderFooterWrapper>ERROR: {error.message}</HeaderFooterWrapper>;\n\n    onChange(data);\n\n    return <div>Loading ...</div>\n}\n\nclass Rulet extends Component {\n\n    socket = null;\n    socket_is_open = false;\n\n    modal_message = null;\n\n    constructor(props){\n        super(props);\n        this.state = {\n            redirect: false,\n            url: null,\n            employees_data: null,\n            employees_ready: false,\n        };\n        this.socket = new WebSocket(\n            (DEVELOP ? \"ws://127.0.0.1:8000\" : \"ws://\" + window.location.host)\n                    + \"/ws/rulet/\" + this.props.match.params.department_id\n        );\n        this.socket.onopen = ev => {\n            this.socket_is_open = true;\n        };\n        this.socket.onmessage = ev => {\n\n            if (this.modal_message === null)\n            {\n                let elem = document.querySelector(\"#modal_message\");\n                this.modal_message = M.Modal.init(elem);\n            }\n\n            let data = JSON.parse(ev.data);\n            if(data['state'] === 'info') {\n                console.log(data['exit']);\n                if (data['exit']) {\n                    this.socket.close();\n                    this.socket_is_open = false;\n                    this.setState({redirect: true, url: \"/department/\" + this.props.match.params.department_id})\n                }\n                else {\n                    let elem = document.querySelector(\"#modal_message_inner\");\n                    if (! elem)\n                        return;\n                    elem.innerHTML = data['info'];\n                    this.modal_message.open();\n                }\n            } else if (data['state'] === 'chosen') {\n                let employees_data = this.state.employees_data;\n                let new_data = {employeesWithoutDepartment: []};\n                for (let i = 0; i < employees_data.employeesWithoutDepartment.length; i++)\n                    if (employees_data.employeesWithoutDepartment[i].id != data['employee_id'])\n                        new_data.employeesWithoutDepartment.push(employees_data.employeesWithoutDepartment[i]);\n                this.setState({employees_data: new_data});\n                let elem = document.querySelector(\".carousel\");\n                try {\n                    M.Carousel.init(elem);\n                } catch (e) {\n\n                }\n            }\n        };\n\n        this.handleChange = this.handleChange.bind(this);\n    }\n\n    handleChange(data) {\n        this.setState({employees_data: data, employees_ready: true});\n    }\n\n    handleChose(employee_id) {\n        if (this.socket_is_open)\n            this.socket.send(JSON.stringify({state: \"chosen\", employee_id: employee_id}))\n    }\n\n    handleProfilePageRedirect(employee_id) {\n        this.socket.close();\n        this.socket_is_open = false;\n        this.setState({redirect: true, url: \"/employee/\" + employee_id})\n    }\n    handleExit() {\n        if (this.socket_is_open) {\n            this.socket_is_open = false;\n            this.socket.send(JSON.stringify({state: \"exit\"}));\n            this.socket.close();\n        }\n\n        this.setState({redirect: true, url: \"/department/\" + this.props.match.params.department_id})\n    }\n\n    render() {\n\n        if (!this.state.employees_ready)\n            return <HeaderFooterWrapper avoidNotification={true}>\n                <RuletEmployeesRequest onChange={this.handleChange}/>\n            </HeaderFooterWrapper>;\n\n        if (this.state.redirect)\n            return <Redirect to={this.state.url}/>;\n\n        return <HeaderFooterWrapper avoidNotification={true}>\n            <div className={\"section container\"}>\n                <h2>Available employees:</h2>\n                <Carousel>\n                    {this.state.employees_data.employeesWithoutDepartment.map(e =>\n                    <div align={\"center\"}>\n                        <p></p>\n                        <img src={(DEVELOP ? \"http://127.0.0.1:8000\" : \"\") + e.image} alt={\"\"} className={\"circle\"}/>\n                        <b>{e.firstName} {e.lastName}</b> <br/><br/>\n                        <Button waves={\"light\"} onClick={ev => this.handleProfilePageRedirect(e.id)}>\n                            show profile</Button> <br/><br/>\n                        <Button waves={\"light\"} onClick={ev => this.handleChose(e.id)}>select</Button>\n                    </div>)}\n                </Carousel>\n                <Button waves={\"light\"} floating large onClick={ev =>\n                {if (this.modal_message) this.modal_message.open()}} icon={<Icon>message</Icon>}/> <span></span>\n                <Button waves={\"light\"} floating large onClick={ev =>\n                    this.handleExit()} icon={<Icon>exit_to_app</Icon>}/>\n            </div>\n            <Modal header={\"You received message from server\"} actions={[\n                <Button waves={\"green\"} modal={\"close\"} flat>Ok</Button>\n            ]} id={\"modal_message\"}>\n                <p id={\"modal_message_inner\"}>\n                    {this.state.modal_message}\n                </p>\n            </Modal>\n        </HeaderFooterWrapper>\n    }\n}\n\nexport default Rulet;","import React from 'react'\nimport {Route, Switch} from \"react-router-dom\";\nimport DepartmentSelect from \"./components/pages/DepartmentSelect\";\nimport DepartmentProfilePage from \"./components/pages/DepartmentProfilePage\";\nimport EmployeeList from \"./components/pages/EmployeeList\";\nimport EmployeeDetail from \"./components/pages/EmployeeDetail\";\nimport RuletList from \"./components/pages/RuletList\";\nimport RuletSessionResult from \"./components/pages/RuletSessionResult\";\nimport Rulet from \"./components/pages/Rulet\";\n\nfunction Router(props) {\n    return(\n        <Switch>\n            <Route exact path={\"/\"} component={DepartmentSelect}/>\n            <Route exact path={\"/department/:department_id\"} component={DepartmentProfilePage}/>\n            <Route exact path={\"/employees_list/\"} component={EmployeeList}/>\n            <Route exact path={\"/employee/:employee_id\"} component={EmployeeDetail}/>\n            <Route exact path={\"/rulet/list/\"} component={RuletList}/>\n            <Route exact path={\"/rulet/list/:rulet_id\"} component={RuletSessionResult}/>\n            <Route exact path={\"/rulet/:department_id\"} component={Rulet}/>\n        </Switch>\n    );\n}\n\n\nexport default Router;","import React from 'react';\nimport 'materialize-css/dist/css/materialize.min.css';\nimport Router from \"./Router\";\nimport M from \"materialize-css\"\n\nfunction App() {\n    return [\n          <Router/>,\n    ];\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {BrowserRouter, Route} from 'react-router-dom'\nimport {ApolloClient} from 'apollo-client'\nimport {createHttpLink} from 'apollo-link-http'\nimport {InMemoryCache} from 'apollo-cache-inmemory'\nimport {ApolloProvider} from 'react-apollo'\n\nlet DEVELOP = false;\n\nconst client = new ApolloClient({\n    link: createHttpLink({uri:\n            (DEVELOP ? 'http://127.0.0.1:8000/graphql/' : window.location.origin + '/graphql/')}),\n    cache: new InMemoryCache(),\n    fetchOptions: {\n        mode: 'no-cors'\n    }\n});\n\nReactDOM.render(\n    <ApolloProvider client={client}>\n        <BrowserRouter>\n            <Route component={App}/>\n        </BrowserRouter>\n    </ApolloProvider>\n    , document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n\nexport default client;\nexport {DEVELOP};"],"sourceRoot":""}